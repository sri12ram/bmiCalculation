for (i in 1:10) {}
print(i)
}
for (i in 1:15) { print(i)}
cube <- function(x, n)  {}
cube <- function(x, n)  {
x^3
}
cube(3)
x <- 1:10;  if (x > 5)  {  x <- 0  }
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
install.packages("slidify")
library(kernlab)
install.packages("kernlab")
?data
## Question 3
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis, predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
subSet <- training[grep("^IL", names(training))]
preProc <- preProcess(subSet, method = "pca", thresh = 0.9, outcome = training$diagnosis)
preProc$rotation
setwd("~/Documents/Reference/RWorkDir")
runApp()
library(shiny)
install.packages("shiny")
library(shiny)
runApp()
runApp()
library(ggplot2)
installed.packages("dplyr")
install.packages("dplyr")
install.packages("ggplot")
install.packages("ggplot2")
install.packages("manipulate")
install.packages("caret")
install.packages("httr")
install.packages("AppliedPredictiveModeling")
library(devtools)
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
ls
dir()
setwd("~/Documents/Reference/RWorkDir/bmiCalculation")
runApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
runApp()
deployApp()
install.packages("slidify")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv/slidify')
install_github('slidify', 'ramnathv/slidify')
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
setwd("~/Documents/Reference/RWorkDir/bmiCalculation")
author ("bmiCalculation")
slidify("index.Rmd")
getwd()
dir()
slidify("index.Rmd")
library(stringr)
slidify("index.Rmd")
